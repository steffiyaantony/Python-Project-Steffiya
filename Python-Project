import requests as r
from bs4 import BeautifulSoup
import pandas as pd
import random
genere_list = ['Action', 'Adventure',
               'Animation', 'Biography',
               'Comedy', 'Crime',
               'Documentary', 'Drama',
               'Family', 'Fantasy',
               'Film-Noir', 'History',
               'Horror', 'Music', 'Musical',
               'Mystery', 'Romance', 'Sci-Fi',
               'Short', 'Sport', 'Thriller',
               'War', 'Western']

print(genere_list)

# genere = input('Please select one genere from the above list.')
genere = 'action'

url = fr'https://www.imdb.com/search/title/?genres={genere}&explore=genres&title_type=feature&ref_=ft_movie_0'
response = r.get(url)

bsobject = BeautifulSoup(response.content.decode(), "html.parser")

all_movies = bsobject.find_all("div", class_='lister-item mode-advanced')

movie_df = pd.DataFrame()

for one_movie in all_movies:

    try:
        movie_name = str(one_movie.find('h3', class_="lister-item-header").a.get_text())
    except:
        movie_name = ''
    try:
        year = str(one_movie.find('h3', class_="lister-item-header").find(class_="lister-item-year text-muted unbold").get_text()).strip('(').strip(')')
        year = int(''.join(filter(str.isdigit, year)))
    except:
        year = ''
    try:
        PG_rating = str(one_movie.find_all('p').__getitem__(0).find_all('span').__getitem__(0).get_text()).strip(' ').strip('')
    except:
        PG_rating = ''

    try:
        run_time = str(one_movie.find_all('p').__getitem__(0).find_all('span').__getitem__(2).get_text()).strip(' ').strip('')
    except:
        run_time = ''

    try:
        rating = str(one_movie.find('div', class_="ratings-bar").find_all('div').__getitem__(0).get_text()).strip('\n').strip(' ')
    except:
        rating = ''

    temp_dict = {'name': [movie_name], 'year': [year], 'pg_rating': [PG_rating], 'run_time': [run_time], 'rating': [rating]}

    #movie_df = movie_df.append(pd.DataFrame(temp_dict), ignore_index=True)
#print(movie_df)
#movie_df.to_csv('imdb_movies_list.csv', index=False)
#To create movie picker bot
movie_df = pd.read_csv(r'imdb_movies_list.csv')
movies = movie_df
def movie_picker(year=None):
    if year:
        filtered_movies = [movie for movie in movies if movie['year'] == year]
    else:
        filtered_movies = movies
    
    if filtered_movies:
        return random.choice(filtered_movies)['name']
    else:
        return None

while True:
    user_input = input("Enter 'pick' to get a movie recommendation, 'year' to filter by year, or 'quit' to exit: ")
    
    if user_input.lower() == 'pick':
        movie = movie_picker()
        print(f"Recommended Movie: {movie}")
    elif user_input.lower() == 'year':
        year_input = input("Enter the release year: ")
        try:
            year = int(year_input)
            movie = movie_picker(year)
            if movie:
                print(f"Recommended Movie: {movie}")
            else:
                print("No movies available for the given year.")
        except ValueError:
            print("Invalid year input.")
    elif user_input.lower() == 'quit':
        print("Goodbye!")
        break
    else:
        print("Invalid input. Please try again.")
