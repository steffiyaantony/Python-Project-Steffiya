import requests as r
from bs4 import BeautifulSoup
import pandas as pd
import random

genere_list = ['action', 'adventure',
               'animation', 'biography',
               'comedy', 'crime',
               'documentary', 'drama',
               'family', 'fantasy',
               'film-noir', 'history',
               'horror', 'music', 'musical',
               'mystery', 'romance', 'sci-fi',
               'short', 'sport', 'thriller',
               'war', 'western']

def randomizer(list):
    return random.choice(list)

while True:
    print("Please select a genere from the list or quit\n", ','.join(genere_list))
    genere = input()
    if genere.lower() in genere_list:
        break
    elif genere.lower() == 'quit':
        print("Good Bye!Have a Nice Day!")
        exit()
    else:
        print("please provide the correct input")
url = fr'https://www.imdb.com/search/title/?genres={genere}&explore=genres&title_type=feature&ref_=ft_movie_0'
response = r.get(url)

bsobject = BeautifulSoup(response.content.decode(), "html.parser")

all_movies = bsobject.find_all("div", class_='lister-item mode-advanced')

movie_df = pd.DataFrame()

for one_movie in all_movies:

    try:
        movie_name = str(one_movie.find('h3', class_="lister-item-header").a.get_text())
    except:
        movie_name = ''
    try:
        year = str(one_movie.find('h3', class_="lister-item-header").find(
            class_="lister-item-year text-muted unbold").get_text()).strip('(').strip(')')
        year = int(''.join(filter(str.isdigit, year)))
    except:
        year = ''
    try:
        PG_rating = str(one_movie.find_all('p').__getitem__(0).find_all('span').__getitem__(0).get_text()).strip(
            ' ').strip('')
    except:
        PG_rating = ''

    try:
        run_time = str(one_movie.find_all('p').__getitem__(0).find_all('span').__getitem__(2).get_text()).strip(
            ' ').strip('')
    except:
        run_time = ''

    try:
        rating = str(one_movie.find('div', class_="ratings-bar").find_all('div').__getitem__(0).get_text()).strip(
            '\n').strip(' ')
    except:
        rating = ''

    temp_dict = {'name': [movie_name], 'year': [year], 'pg_rating': [PG_rating], 'run_time': [run_time],
                 'rating': [rating]}

    movie_df = movie_df.append(pd.DataFrame(temp_dict), ignore_index=True)

while True:
    year = input(f'Please select a year of a movie from list {movie_df["year"].unique()} or for any random movie type "any" \n')
    if str(year) in list(movie_df["year"].astype(str).unique()):
        df_year_filter = movie_df[movie_df["year"].astype(str) == str(year)]
        break
    elif year.lower() == "any":
        df_year_filter = movie_df
        break
    else:
        print("Invalid Input provided, please provide the correct inptut")

while True:
    rating = input(f'Please select the rating or type "any" for random movie pick \n')

    if rating.isdigit():
        df_rating_filter = df_year_filter[df_year_filter["rating"] >= rating]
        movie_name = randomizer(list(df_rating_filter["name"].unique()))
        print(movie_name)
        break
    elif rating.lower() == "any":
        df_rating_filter = df_year_filter
        movie_name = randomizer(list(df_rating_filter["name"].unique()))
        print(movie_name)
        break
    else:
        print("Invalid Input provided, please provide the correct input")
